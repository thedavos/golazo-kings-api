services:
  mysql:
    image: mysql:8.0
    container_name: golazo_kings_mysql_prod
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_AUTHENTICATION_PLUGIN=caching_sha2_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    env_file:
      - .env.production
    healthcheck:
      test: ["CMD", "mysql", "--user=root", "--password=${DB_ROOT_PASSWORD}", "-e", "SELECT 1;"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - golazo_network
    deploy:
      resources:
        limits:
          memory: 512M

  api:
    build:
      context: .
      target: production
    container_name: golazo_kings_api_prod
    restart: always
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - golazo_network
    deploy:
      resources:
        limits:
          memory: 512M
    command: npm run start:prod

volumes:
  mysql_data:
    name: golazo_kings_mysql_data

networks:
  golazo_network:
    name: golazo_kings_network
    driver: bridge