import { MigrationInterface, QueryRunner } from "typeorm";

export class InitialSchema1749520066308 implements MigrationInterface {
    name = 'InitialSchema1749520066308'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`standings\` (\`id\` int NOT NULL AUTO_INCREMENT, \`uuid\` varchar(36) NOT NULL, \`rank\` int NOT NULL, \`points\` int NOT NULL DEFAULT '0', \`played\` int NOT NULL DEFAULT '0', \`won\` int NOT NULL DEFAULT '0', \`drawn\` int NOT NULL DEFAULT '0', \`lost\` int NOT NULL DEFAULT '0', \`goalsFor\` int NOT NULL DEFAULT '0', \`goalsAgainst\` int NOT NULL DEFAULT '0', \`goalDifference\` int NOT NULL DEFAULT '0', \`form\` varchar(20) NULL, \`description\` varchar(255) NULL, \`seasonId\` int NOT NULL, \`seasonUuid\` varchar(255) NOT NULL, \`teamId\` int NOT NULL, \`teamUuid\` varchar(255) NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), INDEX \`IDX_b985292bed431198a38647916c\` (\`rank\`), UNIQUE INDEX \`IDX_62e236acbdcb131e4edad62f18\` (\`seasonId\`, \`seasonUuid\`), PRIMARY KEY (\`id\`, \`uuid\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`matches\` (\`id\` int NOT NULL AUTO_INCREMENT, \`uuid\` varchar(36) NOT NULL, \`matchDate\` datetime NOT NULL COMMENT 'Fecha y hora UTC del partido', \`status\` enum ('Scheduled', 'Timed', 'In Play', 'Paused', 'Finished', 'Suspended', 'Postponed', 'Cancelled', 'Awarded') NOT NULL DEFAULT 'Scheduled', \`homeTeamScore\` int NULL COMMENT 'Goles del equipo local', \`awayTeamScore\` int NULL COMMENT 'Goles del equipo visitante', \`venue\` varchar(255) NULL COMMENT 'Estadio o lugar del partido', \`round\` varchar(255) NULL COMMENT 'Jornada o ronda de la temporada', \`details\` text NULL COMMENT 'Detalles adicionales, ej: motivo de suspensi√≥n', \`seasonId\` int NOT NULL COMMENT 'FK a la temporada a la que pertenece el partido', \`seasonUuid\` varchar(255) NOT NULL, \`homeTeamId\` int NOT NULL COMMENT 'FK al equipo local', \`homeTeamUuid\` varchar(255) NOT NULL, \`awayTeamId\` int NOT NULL COMMENT 'FK al equipo visitante', \`awayTeamUuid\` varchar(255) NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), INDEX \`IDX_0959d1fbd5d719ffc26d5f9f8f\` (\`matchDate\`), PRIMARY KEY (\`id\`, \`uuid\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`seasons\` (\`id\` int NOT NULL AUTO_INCREMENT, \`uuid\` varchar(36) NOT NULL, \`name\` varchar(100) NOT NULL, \`year\` int NOT NULL, \`startDate\` date NOT NULL, \`endDate\` date NOT NULL, \`status\` enum ('Planned', 'Ongoing', 'Completed', 'Cancelled') NOT NULL DEFAULT 'Planned', \`leagueId\` int NOT NULL, \`leagueUuid\` varchar(255) NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), PRIMARY KEY (\`id\`, \`uuid\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`leagues\` (\`id\` int NOT NULL AUTO_INCREMENT, \`uuid\` varchar(36) NOT NULL, \`name\` varchar(255) NOT NULL, \`slug\` varchar(255) NOT NULL, \`abbr\` varchar(10) NOT NULL, \`country\` varchar(100) NOT NULL, \`city\` varchar(100) NOT NULL, \`logoUrl\` varchar(512) NULL, \`foundationYear\` int NULL, \`website\` varchar(255) NULL, \`twitterHandle\` varchar(100) NULL, \`instagramHandle\` varchar(100) NULL, \`numberOfTeams\` int NOT NULL DEFAULT '0', \`description\` text NULL, \`rules\` text NULL, \`status\` enum ('DRAFT', 'ACTIVE', 'FINISHED', 'CANCELLED') NOT NULL DEFAULT 'DRAFT', \`isActive\` tinyint NOT NULL DEFAULT 0, \`isVisible\` tinyint NOT NULL DEFAULT 1, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), UNIQUE INDEX \`IDX_f4c22a253137e82ec78850e9b7\` (\`slug\`), PRIMARY KEY (\`id\`, \`uuid\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`players\` (\`id\` int NOT NULL AUTO_INCREMENT, \`uuid\` varchar(36) NOT NULL, \`slug\` varchar(255) NOT NULL, \`firstName\` varchar(100) NOT NULL, \`lastName\` varchar(100) NOT NULL, \`position\` enum ('Portero', 'Defensa', 'Mediocampista', 'Delantero') NULL, \`positionAbbreviation\` enum ('PO', 'DFC', 'DFI', 'DFD', 'MC', 'MI', 'MD', 'DC') NULL, \`jerseyNumber\` int NULL, \`dateOfBirth\` date NULL, \`nationality\` varchar(100) NULL, \`imageUrl\` varchar(255) NULL, \`teamId\` int NOT NULL, \`teamUuid\` varchar(255) NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), UNIQUE INDEX \`IDX_7310cf1fe0f6e1b70560e5d5a6\` (\`slug\`), PRIMARY KEY (\`id\`, \`uuid\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`presidents\` (\`id\` int NOT NULL AUTO_INCREMENT, \`uuid\` varchar(36) NOT NULL, \`slug\` varchar(255) NOT NULL, \`firstName\` varchar(100) NOT NULL, \`lastName\` varchar(100) NOT NULL, \`nickName\` varchar(100) NOT NULL, \`dateOfBirth\` date NULL, \`nationality\` varchar(100) NULL, \`termStartDate\` date NOT NULL, \`termEndDate\` date NULL, \`isActive\` tinyint NOT NULL DEFAULT 1, \`imageUrl\` varchar(512) NULL, \`teamId\` int NOT NULL, \`teamUuid\` varchar(255) NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), UNIQUE INDEX \`IDX_24958952729239b5155bdeff66\` (\`slug\`), PRIMARY KEY (\`id\`, \`uuid\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`teams\` (\`id\` int NOT NULL AUTO_INCREMENT, \`uuid\` varchar(36) NOT NULL, \`slug\` varchar(255) NOT NULL, \`name\` varchar(255) NOT NULL, \`abbr\` varchar(10) NULL, \`logoUrl\` varchar(255) NULL, \`city\` varchar(255) NOT NULL, \`country\` varchar(255) NOT NULL, \`foundationYear\` int NULL, \`venue\` text NULL, \`leagueId\` int NOT NULL, \`leagueUuid\` varchar(255) NOT NULL, \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), UNIQUE INDEX \`IDX_de8536da4945fe980f4a61900d\` (\`slug\`), UNIQUE INDEX \`IDX_48c0c32e6247a2de155baeaf98\` (\`name\`), PRIMARY KEY (\`id\`, \`uuid\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`images\` (\`id\` int NOT NULL AUTO_INCREMENT, \`uuid\` varchar(36) NOT NULL, \`url\` varchar(255) NOT NULL COMMENT 'Public URL of the image in the storage provider', \`key\` varchar(255) NOT NULL COMMENT 'Key (path/filename) of the object in the S3 bucket', \`bucket\` varchar(255) NOT NULL COMMENT 'Name of the S3 bucket where the image is stored', \`mimeType\` varchar(255) NOT NULL COMMENT 'MIME type of the image', \`size\` bigint NOT NULL COMMENT 'Size of the image in bytes', \`originalFilename\` varchar(255) NULL COMMENT 'Original filename from upload', \`entityType\` varchar(255) NOT NULL COMMENT 'Type of the entity this image belongs to (e.g., Player, Team)', \`entityId\` int NOT NULL COMMENT 'ID of the entity instance this image belongs to', \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), INDEX \`IDX_a8ce5bf78d12d00942b65a96a3\` (\`entityType\`), INDEX \`IDX_3faa1afc836cf342db59eb3f54\` (\`entityId\`), PRIMARY KEY (\`id\`, \`uuid\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`standings\` ADD CONSTRAINT \`FK_62e236acbdcb131e4edad62f180\` FOREIGN KEY (\`seasonId\`, \`seasonUuid\`) REFERENCES \`seasons\`(\`id\`,\`uuid\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`standings\` ADD CONSTRAINT \`FK_1c86a5ba5b3dee552c5753399b5\` FOREIGN KEY (\`teamId\`, \`teamUuid\`) REFERENCES \`teams\`(\`id\`,\`uuid\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`matches\` ADD CONSTRAINT \`FK_c8eb17df10da19cd95960673ed3\` FOREIGN KEY (\`seasonId\`, \`seasonUuid\`) REFERENCES \`seasons\`(\`id\`,\`uuid\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`matches\` ADD CONSTRAINT \`FK_5da0bb7818ecb3b1b360804cf13\` FOREIGN KEY (\`homeTeamId\`, \`homeTeamUuid\`) REFERENCES \`teams\`(\`id\`,\`uuid\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`matches\` ADD CONSTRAINT \`FK_6a49fc84c5d4d7f6d9c3c3cfccb\` FOREIGN KEY (\`awayTeamId\`, \`awayTeamUuid\`) REFERENCES \`teams\`(\`id\`,\`uuid\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`seasons\` ADD CONSTRAINT \`FK_cc4d9f52c6c01453eb29253352f\` FOREIGN KEY (\`leagueId\`, \`leagueUuid\`) REFERENCES \`leagues\`(\`id\`,\`uuid\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`players\` ADD CONSTRAINT \`FK_9fd9e6aa2be4e5009297c2c354d\` FOREIGN KEY (\`teamId\`, \`teamUuid\`) REFERENCES \`teams\`(\`id\`,\`uuid\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`presidents\` ADD CONSTRAINT \`FK_c91aab17ccfbec63a255dcafd34\` FOREIGN KEY (\`teamId\`, \`teamUuid\`) REFERENCES \`teams\`(\`id\`,\`uuid\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`teams\` ADD CONSTRAINT \`FK_eb6f0e29a2a79b604200b128577\` FOREIGN KEY (\`leagueId\`, \`leagueUuid\`) REFERENCES \`leagues\`(\`id\`,\`uuid\`) ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`teams\` DROP FOREIGN KEY \`FK_eb6f0e29a2a79b604200b128577\``);
        await queryRunner.query(`ALTER TABLE \`presidents\` DROP FOREIGN KEY \`FK_c91aab17ccfbec63a255dcafd34\``);
        await queryRunner.query(`ALTER TABLE \`players\` DROP FOREIGN KEY \`FK_9fd9e6aa2be4e5009297c2c354d\``);
        await queryRunner.query(`ALTER TABLE \`seasons\` DROP FOREIGN KEY \`FK_cc4d9f52c6c01453eb29253352f\``);
        await queryRunner.query(`ALTER TABLE \`matches\` DROP FOREIGN KEY \`FK_6a49fc84c5d4d7f6d9c3c3cfccb\``);
        await queryRunner.query(`ALTER TABLE \`matches\` DROP FOREIGN KEY \`FK_5da0bb7818ecb3b1b360804cf13\``);
        await queryRunner.query(`ALTER TABLE \`matches\` DROP FOREIGN KEY \`FK_c8eb17df10da19cd95960673ed3\``);
        await queryRunner.query(`ALTER TABLE \`standings\` DROP FOREIGN KEY \`FK_1c86a5ba5b3dee552c5753399b5\``);
        await queryRunner.query(`ALTER TABLE \`standings\` DROP FOREIGN KEY \`FK_62e236acbdcb131e4edad62f180\``);
        await queryRunner.query(`DROP INDEX \`IDX_3faa1afc836cf342db59eb3f54\` ON \`images\``);
        await queryRunner.query(`DROP INDEX \`IDX_a8ce5bf78d12d00942b65a96a3\` ON \`images\``);
        await queryRunner.query(`DROP TABLE \`images\``);
        await queryRunner.query(`DROP INDEX \`IDX_48c0c32e6247a2de155baeaf98\` ON \`teams\``);
        await queryRunner.query(`DROP INDEX \`IDX_de8536da4945fe980f4a61900d\` ON \`teams\``);
        await queryRunner.query(`DROP TABLE \`teams\``);
        await queryRunner.query(`DROP INDEX \`IDX_24958952729239b5155bdeff66\` ON \`presidents\``);
        await queryRunner.query(`DROP TABLE \`presidents\``);
        await queryRunner.query(`DROP INDEX \`IDX_7310cf1fe0f6e1b70560e5d5a6\` ON \`players\``);
        await queryRunner.query(`DROP TABLE \`players\``);
        await queryRunner.query(`DROP INDEX \`IDX_f4c22a253137e82ec78850e9b7\` ON \`leagues\``);
        await queryRunner.query(`DROP TABLE \`leagues\``);
        await queryRunner.query(`DROP TABLE \`seasons\``);
        await queryRunner.query(`DROP INDEX \`IDX_0959d1fbd5d719ffc26d5f9f8f\` ON \`matches\``);
        await queryRunner.query(`DROP TABLE \`matches\``);
        await queryRunner.query(`DROP INDEX \`IDX_62e236acbdcb131e4edad62f18\` ON \`standings\``);
        await queryRunner.query(`DROP INDEX \`IDX_b985292bed431198a38647916c\` ON \`standings\``);
        await queryRunner.query(`DROP TABLE \`standings\``);
    }

}
